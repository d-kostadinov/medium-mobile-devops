trigger:
  - main

parameters:
  - name: buildVariant
    displayName: 'Build Variant'
    type: string
    default: 'dev'
    values:
      - dev
      - prod
      - qa

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildVariant: ${{ parameters.buildVariant }}

stages:
  - stage: BuildAndDistribute
    displayName: 'Build and Distribute APK'
    jobs:
      - job: BuildAndUpload
        displayName: 'Build APK and Upload to Firebase'
        steps:
          # Step 1: Dynamically download the correct google-services.json file
          - task: DownloadSecureFile@1
            displayName: 'Download google-services.json for $(buildVariant)'
            inputs:
              secureFile: ${{
                if eq(variables['buildVariant'], 'dev') }} 'google-services-dev.json' {{
                if eq(variables['buildVariant'], 'prod') }} 'google-services-prod.json' {{
                if eq(variables['buildVariant'], 'qa') }} 'google-services-qa.json' {{}}

          # Step 2: Inject the correct google-services.json file
          - script: |
              echo "Using google-services.json for buildVariant: $(buildVariant)"
              mv "$(Agent.TempDirectory)/google-services-$(buildVariant).json" ./app/google-services.json
            displayName: 'Inject google-services.json'

          # Step 3: Install and set up Java 17
          - script: |
              sudo apt-get update
              sudo apt-get install -y openjdk-17-jdk
              echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
              java -version
            displayName: 'Install and Configure Java 17'

          # Step 4: Build the APK
          - script: |
              echo "Building APK for $(buildVariant)..."
              ./gradlew assemble${{ variables.buildVariant | capitalize }}Debug
            displayName: 'Build APK for $(buildVariant)'

          # Step 5: Upload APK to Firebase
          - script: |
              APK_PATH="./app/build/outputs/apk/$(buildVariant)/debug/app-$(buildVariant)-debug.apk"
              echo "Uploading APK: $APK_PATH"
              ./gradlew appDistributionUpload${{ variables.buildVariant | capitalize }}Debug \
                -PfirebaseAppId="YOUR_FIREBASE_APP_ID" \
                -PserviceAccountFile="./app/google-services.json"
            displayName: 'Upload APK to Firebase'
