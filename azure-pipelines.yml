trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildVariant: dev # Set your build variant (e.g., dev, prod, qa)
  buildVariantCapitalized: Dev # Capitalized version of the build variant for Gradle tasks

steps:
  # Set up Java 17 manually
  - script: |
      sudo apt-get update
      sudo apt-get install -y openjdk-17-jdk
      java -version
    displayName: Set up Java 17

  # Checkout the repository
  - task: Checkout@1
    displayName: Checkout source code

  # Download the correct google-services.json file based on the build variant
  - task: DownloadSecureFile@1
    name: DownloadGoogleServices
    displayName: Download google-services.json
    inputs:
      secureFile: google-services-$(buildVariant).json

  # Move the downloaded google-services.json to the app directory
  - script: |
      mv $(Agent.TempDirectory)/google-services-*.json $(System.DefaultWorkingDirectory)/app/google-services.json
    displayName: Move google-services.json to app directory

  # Install dependencies
  - script: |
      ./gradlew dependencies
    displayName: Install dependencies

  # Build the APK for the specified variant
  - script: |
      ./gradlew assemble$(buildVariantCapitalized)Debug
    displayName: Build APK

  # Upload the APK to Firebase
  - script: |
      ./gradlew appDistributionUpload$(buildVariantCapitalized)Debug
    displayName: Upload APK to Firebase
