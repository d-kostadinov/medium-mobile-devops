trigger:
- main

variables:
  buildVariant: 'dev'
  firebaseServiceFile: 'medium-devops-01-firebase-adminsdk-ibr0u-6a85363e42.json'

pool:
  vmImage: 'ubuntu-22.04'

steps:
# Step 1: Explicit checkout configuration
- task: Checkout@1
  inputs:
    repository: self

# Step 2: Sync from GitHub
- script: |
    git remote add github https://github.com/d-kostadinov/medium-mobile-devops.git
    git fetch github
    git config user.name "Azure DevOps CI"
    git config user.email "ci@azuredevops.com"
    git merge github/main --allow-unrelated-histories # Allow merging unrelated histories
    git push origin main
  displayName: 'Sync with GitHub'

# Step 2: Install Java 17
- script: |
    sudo apt update
    sudo apt install -y openjdk-17-jdk
    sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
    java -version
  displayName: 'Install and Set Java 17'

# Step 3: Set JAVA_HOME
- script: |
    echo "Setting JAVA_HOME..."
    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    echo "JAVA_HOME is set to $JAVA_HOME"
  displayName: 'Set JAVA_HOME for Java 17'

# Step 4: Verify JAVA_HOME
- script: |
    echo "Verifying JAVA_HOME..."
    echo $JAVA_HOME
    java -version
  displayName: 'Verify JAVA_HOME'

# Step 5: Download secure files
# 1. Google Services JSON
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'google-services-$(buildVariant).json'
- script: |
    echo "Moving google-services.json..."
    mv $(Agent.TempDirectory)/google-services-$(buildVariant).json app/google-services.json
  displayName: 'Inject google-services.json'

# 2. Firebase Service Account JSON
- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(firebaseServiceFile)'
- script: |
    echo "Moving Firebase service account JSON..."
    mv $(Agent.TempDirectory)/$(firebaseServiceFile) ./firebase-service-account.json
  displayName: 'Inject Firebase Service Account JSON'

# Step 6: Build the app
- script: |
    ./gradlew clean bundle${{ variables.buildVariant }}
  displayName: 'Build the App'
  env:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

# Step 7: Verify build output directory
- script: |
    echo "Listing contents of build directory:"
    ls -R app/build/outputs
  displayName: 'Verify Build Output Directory'

# Step 8: Distribute to Firebase App Distribution
- script: |
    ./gradlew appDistributionUploadDebug \
      -PfirebaseServiceCredentialsFile=firebase-service-account.json
  displayName: 'Distribute to Firebase'
  env:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
